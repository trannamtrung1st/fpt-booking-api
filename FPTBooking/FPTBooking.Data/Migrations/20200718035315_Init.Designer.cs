// <auto-generated />
using System;
using FPTBooking.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FPTBooking.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200718035315_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FPTBooking.Data.Models.AppEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayContent")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("HappenedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppEvent");
                });

            modelBuilder.Entity("FPTBooking.Data.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "Administrator",
                            ConcurrencyStamp = "25a2acab-0da3-41ca-ab9d-c2ab27f7e59b",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "Manager",
                            ConcurrencyStamp = "178ffb87-c240-417f-9526-763eb29f7b70",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = "RoomChecker",
                            ConcurrencyStamp = "7f78b3ae-a76c-4365-b3ba-1eaf6fa8b799",
                            Name = "RoomChecker",
                            NormalizedName = "ROOMCHECKER"
                        },
                        new
                        {
                            Id = "User",
                            ConcurrencyStamp = "7e3cfde4-3781-48d3-b082-745b5b88b88b",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("LoggedIn")
                        .HasColumnType("bit");

                    b.Property<string>("MemberCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "TraPTP@fpt.edu.vn",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c52a3749-058a-457a-8275-fe657fd7d0b8",
                            Email = "TraPTP@fpt.edu.vn",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            LoggedIn = false,
                            MemberCode = "TraPTP",
                            NormalizedEmail = "TRAPTP@FPT.EDU.VN",
                            NormalizedUserName = "TRAPTP@FPT.EDU.VN",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5597a2b1-5421-47fd-b60b-b45106fa7855",
                            TwoFactorEnabled = false,
                            UserName = "TraPTP@fpt.edu.vn"
                        },
                        new
                        {
                            Id = "utnt@fpt.edu.vn",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a4588e8-807b-4a66-811c-6c0377883b50",
                            Email = "utnt@fpt.edu.vn",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            LoggedIn = false,
                            MemberCode = "utnt",
                            NormalizedEmail = "UTNT@FPT.EDU.VN",
                            NormalizedUserName = "UTNT@FPT.EDU.VN",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e07afedc-21c1-4f0b-97e8-4c90f9df1e0a",
                            TwoFactorEnabled = false,
                            UserName = "utnt@fpt.edu.vn"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.AreaMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("AreaCode", "MemberId")
                        .IsUnique();

                    b.ToTable("AreaMember");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaCode = "LB",
                            IsManager = true,
                            MemberId = "TraPTP@fpt.edu.vn"
                        },
                        new
                        {
                            Id = 2,
                            AreaCode = "ADMIN",
                            IsManager = true,
                            MemberId = "utnt@fpt.edu.vn"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.AttachedService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("BookingServiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("BookingServiceCode");

                    b.ToTable("AttachedService");
                });

            modelBuilder.Entity("FPTBooking.Data.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("BookMemberId")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("BookedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("DepartmentAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<TimeSpan>("FromTime")
                        .HasColumnType("time");

                    b.Property<string>("ManagerMessage")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("NumOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<TimeSpan>("ToTime")
                        .HasColumnType("time");

                    b.Property<string>("UsingMemberIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookMemberId");

                    b.HasIndex("RoomCode");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("FPTBooking.Data.Models.BookingHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FromStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("HappenedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ToStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("MemberId");

                    b.ToTable("BookingHistory");
                });

            modelBuilder.Entity("FPTBooking.Data.Models.BookingService", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Code");

                    b.ToTable("BookingService");

                    b.HasData(
                        new
                        {
                            Code = "TB",
                            Archived = false,
                            Description = "Tea break party in break time",
                            Name = "Tea break"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.BookingUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BookingUsage");
                });

            modelBuilder.Entity("FPTBooking.Data.Models.BuildingArea", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Code");

                    b.ToTable("BuildingArea");

                    b.HasData(
                        new
                        {
                            Code = "LB",
                            Archived = false,
                            Description = "Library",
                            Name = "Library"
                        },
                        new
                        {
                            Code = "ADMIN",
                            Archived = false,
                            Description = "Administrative",
                            Name = "Administrative"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.BuildingBlock", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Code");

                    b.ToTable("BuildingBlock");

                    b.HasData(
                        new
                        {
                            Code = "MAIN",
                            Archived = false,
                            Name = "Main building"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.BuildingLevel", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingBlockCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Code");

                    b.HasIndex("BuildingBlockCode");

                    b.ToTable("BuildingLevel");

                    b.HasData(
                        new
                        {
                            Code = "F1",
                            Archived = false,
                            BuildingBlockCode = "MAIN",
                            Name = "1st floor"
                        },
                        new
                        {
                            Code = "F2",
                            Archived = false,
                            BuildingBlockCode = "MAIN",
                            Name = "2nd floor"
                        },
                        new
                        {
                            Code = "F3",
                            Archived = false,
                            BuildingBlockCode = "MAIN",
                            Name = "3rd floor"
                        },
                        new
                        {
                            Code = "F4",
                            Archived = false,
                            BuildingBlockCode = "MAIN",
                            Name = "4th floor"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.Department", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Code");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Code = "LB",
                            Archived = false,
                            Description = "Library",
                            Name = "Library"
                        },
                        new
                        {
                            Code = "ADMIN",
                            Archived = false,
                            Description = "Administrative",
                            Name = "Administrative"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.DepartmentMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsManager")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("MemberId");

                    b.ToTable("DepartmentMember");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentCode = "LB",
                            IsManager = true,
                            MemberId = "TraPTP@fpt.edu.vn"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentCode = "ADMIN",
                            IsManager = true,
                            MemberId = "utnt@fpt.edu.vn"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.Member", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            UserId = "TraPTP@fpt.edu.vn",
                            Code = "TraPTP",
                            Email = "TraPTP@fpt.edu.vn"
                        },
                        new
                        {
                            UserId = "utnt@fpt.edu.vn",
                            Code = "utnt",
                            Email = "utnt@fpt.edu.vn"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.Room", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<TimeSpan>("ActiveFromTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ActiveToTime")
                        .HasColumnType("time");

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<double?>("AreaSize")
                        .HasColumnType("float");

                    b.Property<string>("BuildingAreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BuildingBlockCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BuildingLevelCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("HangingEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HangingStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HangingUserId")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("PeopleCapacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Code");

                    b.HasIndex("BuildingAreaCode");

                    b.HasIndex("BuildingLevelCode");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("RoomTypeCode");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            Code = "LB. 12",
                            ActiveFromTime = new TimeSpan(0, 8, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 17, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "LB",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "LB",
                            Description = "This room is managed by Library department.",
                            IsAvailable = true,
                            Name = "LB. 12",
                            PeopleCapacity = 10,
                            RoomTypeCode = "LB"
                        },
                        new
                        {
                            Code = "LB. 13",
                            ActiveFromTime = new TimeSpan(0, 13, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 17, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "LB",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "LB",
                            Description = "This room is Business room. Library department can only use the room from 13:00 to 17:00.",
                            IsAvailable = true,
                            Name = "LB. 13",
                            PeopleCapacity = 15,
                            RoomTypeCode = "LB"
                        },
                        new
                        {
                            Code = "LB. 15",
                            ActiveFromTime = new TimeSpan(0, 8, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 17, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "LB",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "LB",
                            Description = "This room is managed by Library department.",
                            IsAvailable = true,
                            Name = "LB. 15",
                            PeopleCapacity = 8,
                            RoomTypeCode = "LB"
                        },
                        new
                        {
                            Code = "LB. 21",
                            ActiveFromTime = new TimeSpan(0, 8, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 17, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "LB",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "LB",
                            Description = "This room is managed by Library department.",
                            IsAvailable = true,
                            Name = "LB. 21",
                            PeopleCapacity = 10,
                            RoomTypeCode = "LB"
                        },
                        new
                        {
                            Code = "Seminar",
                            ActiveFromTime = new TimeSpan(0, 8, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 17, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "LB",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "LB",
                            Description = "This room is managed by Library department.",
                            IsAvailable = true,
                            Name = "Seminar",
                            PeopleCapacity = 80,
                            RoomTypeCode = "LB"
                        },
                        new
                        {
                            Code = "101",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "101",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "102",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "102",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "103",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "103",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "104",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "104",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "105",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "105",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "106",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "106",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "107",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "107",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "108",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "108",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "109",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "109",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "110",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "110",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "111",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "111",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "112",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "112",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "113",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "113",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "114",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "114",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "115",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "115",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "116",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "116",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "117",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "117",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "118",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "118",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "119",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "119",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "120",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "120",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "121",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "121",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "122",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "122",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "123",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "123",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "124",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "124",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "125",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "125",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "126",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "126",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "127",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "127",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "128",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "128",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "129",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "129",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "130",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "130",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "131",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "131",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "132",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "132",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "133",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "133",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "134",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "134",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "135",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "135",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "136",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "136",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "137",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F1",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "137",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "201",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "201",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "202",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "202",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "203",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "203",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "204",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "204",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "205",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "205",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "206",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "206",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "207",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "207",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "208",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "208",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "209",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "209",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "210",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "210",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "211",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "211",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "212",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "212",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "213",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "213",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "214",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "214",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "215",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "215",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "216",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "216",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "217",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "217",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "218",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "218",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "219",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "219",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "220",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "220",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "221",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "221",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "222",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "222",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "223",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "223",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "224",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "224",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "225",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "225",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "226",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "226",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "227",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "227",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "228",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "228",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "229",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "229",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "230",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "230",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "231",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "231",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "232",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "232",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "233",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "233",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "234",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F2",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "234",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "301",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "301",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "302",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "302",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "303",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "303",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "304",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "304",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "305",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "305",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "306",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "306",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "307",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "307",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "308",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "308",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "309",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "309",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "310",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "310",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "311",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "311",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "312",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "312",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "313",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "313",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "314",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "314",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "315",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F3",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "315",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "401",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "401",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "402",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "402",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "403",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "403",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "404",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "404",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "405",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "405",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "406",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "406",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "407",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "407",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "408",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "408",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "409",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "409",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "410",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "410",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "411",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "411",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "412",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "412",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "413",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "413",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "414",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "414",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "415",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "415",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "416",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "416",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "417",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "417",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "418",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "418",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "419",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "419",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "420",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "420",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "421",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "421",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        },
                        new
                        {
                            Code = "422",
                            ActiveFromTime = new TimeSpan(0, 6, 0, 0, 0),
                            ActiveToTime = new TimeSpan(0, 22, 0, 0, 0),
                            Archived = false,
                            BuildingAreaCode = "ADMIN",
                            BuildingBlockCode = "MAIN",
                            BuildingLevelCode = "F4",
                            DepartmentCode = "ADMIN",
                            Description = "This room is managed by Administrative department.",
                            IsAvailable = true,
                            Name = "422",
                            PeopleCapacity = 35,
                            RoomTypeCode = "ADMIN"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.RoomResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("RoomCode");

                    b.ToTable("RoomResource");
                });

            modelBuilder.Entity("FPTBooking.Data.Models.RoomType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Code");

                    b.ToTable("RoomType");

                    b.HasData(
                        new
                        {
                            Code = "LB",
                            Archived = false,
                            Description = "Library",
                            Name = "Library"
                        },
                        new
                        {
                            Code = "ADMIN",
                            Archived = false,
                            Description = "Administrative",
                            Name = "Administrative"
                        });
                });

            modelBuilder.Entity("FPTBooking.Data.Models.RoomTypeService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookingServiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RoomTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("BookingServiceCode");

                    b.HasIndex("RoomTypeCode");

                    b.ToTable("RoomTypeService");
                });

            modelBuilder.Entity("FPTBooking.Data.Models.UsageOfBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("BookingUsageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("BookingUsageId");

                    b.ToTable("UsageOfBooking");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "TraPTP@fpt.edu.vn",
                            RoleId = "Manager"
                        },
                        new
                        {
                            UserId = "utnt@fpt.edu.vn",
                            RoleId = "Manager"
                        },
                        new
                        {
                            UserId = "TraPTP@fpt.edu.vn",
                            RoleId = "RoomChecker"
                        },
                        new
                        {
                            UserId = "utnt@fpt.edu.vn",
                            RoleId = "RoomChecker"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FPTBooking.Data.Models.AppEvent", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.Member", "User")
                        .WithMany("AppEvent")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.AreaMember", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.BuildingArea", "Area")
                        .WithMany("AreaMember")
                        .HasForeignKey("AreaCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPTBooking.Data.Models.Member", "Member")
                        .WithMany("AreaMember")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.AttachedService", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.Booking", "Booking")
                        .WithMany("AttachedService")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPTBooking.Data.Models.BookingService", "BookingService")
                        .WithMany("AttachedService")
                        .HasForeignKey("BookingServiceCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.Booking", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.Member", "BookMember")
                        .WithMany("Booking")
                        .HasForeignKey("BookMemberId")
                        .IsRequired();

                    b.HasOne("FPTBooking.Data.Models.Room", "Room")
                        .WithMany("Booking")
                        .HasForeignKey("RoomCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.BookingHistory", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.Booking", "Booking")
                        .WithMany("BookingHistory")
                        .HasForeignKey("BookingId")
                        .IsRequired();

                    b.HasOne("FPTBooking.Data.Models.Member", "Member")
                        .WithMany("BookingHistory")
                        .HasForeignKey("MemberId")
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.BuildingLevel", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.BuildingBlock", "BuildingBlock")
                        .WithMany("BuildingLevel")
                        .HasForeignKey("BuildingBlockCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.DepartmentMember", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.Department", "Department")
                        .WithMany("DepartmentMember")
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPTBooking.Data.Models.Member", "Member")
                        .WithMany("DepartmentMember")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.Member", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.AppUser", "User")
                        .WithOne("Member")
                        .HasForeignKey("FPTBooking.Data.Models.Member", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.Room", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.BuildingArea", "BuildingArea")
                        .WithMany("Room")
                        .HasForeignKey("BuildingAreaCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPTBooking.Data.Models.BuildingLevel", "BuildingLevel")
                        .WithMany("Room")
                        .HasForeignKey("BuildingLevelCode");

                    b.HasOne("FPTBooking.Data.Models.Department", "Department")
                        .WithMany("Room")
                        .HasForeignKey("DepartmentCode");

                    b.HasOne("FPTBooking.Data.Models.RoomType", "RoomType")
                        .WithMany("Room")
                        .HasForeignKey("RoomTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.RoomResource", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.Room", "Room")
                        .WithMany("RoomResource")
                        .HasForeignKey("RoomCode");
                });

            modelBuilder.Entity("FPTBooking.Data.Models.RoomTypeService", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.BookingService", "BookingService")
                        .WithMany("RoomTypeService")
                        .HasForeignKey("BookingServiceCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPTBooking.Data.Models.RoomType", "RoomType")
                        .WithMany("RoomTypeService")
                        .HasForeignKey("RoomTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTBooking.Data.Models.UsageOfBooking", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.Booking", "Booking")
                        .WithMany("UsageOfBooking")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPTBooking.Data.Models.BookingUsage", "BookingUsage")
                        .WithMany("UsageOfBooking")
                        .HasForeignKey("BookingUsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPTBooking.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FPTBooking.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
