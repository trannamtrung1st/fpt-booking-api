@page
@model FPTBooking.WebAdmin.Pages.User.IndexModel
@{
}

@section head {

    <!-- icheck bootstrap -->
    <link rel="stylesheet" href="/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <!-- Select2 -->
    <link rel="stylesheet" href="/plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
    <!-- DataTables -->
    <link rel="stylesheet" href="/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <style>
        [class*=icheck-] > label {
            padding-left: 0 !important;
            line-height: unset !important;
        }
    </style>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>@Model.Info.Title</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Routing.DASHBOARD">Dashboard</a></li>
                    <li class="breadcrumb-item active">@Model.Info.Title</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-12">
            <form id="form-create-user">
                <div class="card card-default collapsed collapsed-card">
                    <div class="card-header clickable" data-card-widget="collapse">
                        <h3 class="card-title">
                            <i class="fa fa-user-circle text-black-50 mr-1"></i>
                            Create user
                        </h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-plus"></i></button>
                        </div>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div class="form-group w-50">
                            <label>Full name</label>
                            <input type="text" name="full_name" class="form-control" placeholder="Enter user full name">
                        </div>
                        <div class="form-group w-50">
                            <label>Department(s)</label>
                            <div class="row">
                                <div class="col-10">
                                    <select class="form-control select2" name="department_code">
                                        <option value="">--- Not selected ---</option>
                                    </select>
                                </div>
                                <div class="col-2">
                                    <button class="btn btn-default w-100" onclick="addDepMember('#form-create-user')" type="button">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="dep-member-container">

                        </div>
                        <div class="form-group w-50">
                            <label>Area(s)</label>
                            <div class="row">
                                <div class="col-10">
                                    <select class="form-control select2" name="area_code">
                                        <option value="">--- Not selected ---</option>
                                    </select>
                                </div>
                                <div class="col-2">
                                    <button class="btn btn-default w-100" onclick="addAreaMember('#form-create-user')" type="button">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="area-member-container">

                        </div>
                        <div class="form-group w-50">
                            <label>Email</label>
                            <input type="text" name="email" class="form-control" placeholder="Enter user email">
                        </div>
                        <div class="form-group w-50">
                            <label>Roles</label>
                            <select class="select2" multiple="multiple"
                                    name="roles"
                                    data-placeholder="Select roles" style="width: 100%;">
                                <!option value="@FPTBooking.Data.RoleName.USER" selected>User</!option>
                                <!option value="@FPTBooking.Data.RoleName.ADMIN">Administrator</!option>
                                <!option value="@FPTBooking.Data.RoleName.MANAGER">Manager</!option>
                                <!option value="@FPTBooking.Data.RoleName.ROOM_CHECKER">Room checker</!option>
                            </select>
                        </div>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-primary float-right">
                            <i class="fa fa-plus mr-2"></i>SUBMIT
                        </button>
                    </div>
                </div>
            </form>
            <!-- /.card -->

            <div class="card">
                <div class="card-body">
                    <table id="tbl-main" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th></th>
                                <th>No</th>
                                <th class="sortable">Full name</th>
                                <th class="sortable">Department</th>
                                <th class="sortable">Email</th>
                                <th class="sortable">Roles</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th>No</th>
                                <th>Full name</th>
                                <th>Department</th>
                                <th>Email</th>
                                <th>Roles</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->

<div class="modal fade" id="modal-edit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="card-title">Edit user</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="form-edit-user">
                <div class="modal-body">
                    <input type="hidden" name="user_id" value="" />
                    <div class="form-group">
                        <label>Full name</label>
                        <input type="text" name="full_name" class="form-control" placeholder="Enter user full name">
                    </div>
                    <div class="form-group">
                        <label>Department(s)</label>
                        <div class="row">
                            <div class="col-10">
                                <select class="form-control select2" name="department_code">
                                    <option value="">--- Not selected ---</option>
                                </select>
                            </div>
                            <div class="col-2">
                                <button class="btn btn-default w-100" onclick="addDepMember('#form-edit-user')" type="button">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="dep-member-container">

                    </div>
                    <div class="form-group">
                        <label>Area(s)</label>
                        <div class="row">
                            <div class="col-10">
                                <select class="form-control select2" name="area_code">
                                    <option value="">--- Not selected ---</option>
                                </select>
                            </div>
                            <div class="col-2">
                                <button class="btn btn-default w-100" onclick="addAreaMember('#form-edit-user')" type="button">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="area-member-container">

                    </div>
                    <div class="form-group w-50">
                        <label>Roles</label>
                        <select class="select2" multiple="multiple"
                                name="roles"
                                data-placeholder="Select roles" style="width: 100%;">
                            <!option value="@FPTBooking.Data.RoleName.USER">User</!option>
                            <!option value="@FPTBooking.Data.RoleName.ADMIN">Administrator</!option>
                            <!option value="@FPTBooking.Data.RoleName.MANAGER">Manager</!option>
                            <!option value="@FPTBooking.Data.RoleName.ROOM_CHECKER">Room checker</!option>
                        </select>
                    </div>
                    <!-- /.card -->
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-pen mr-2"></i>SUBMIT
                    </button>
                </div>
            </form>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section scripts {

    <!-- iCheck -->
    <script src="~/plugins/icheck/icheck.min.js"></script>
    <!-- jquery-validation -->
    <script src="/plugins/jquery-validation/jquery.validate.min.js"></script>
    <script src="/plugins/jquery-validation/additional-methods.min.js"></script>
    <!-- DataTables -->
    <script src="/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <!-- Select2 -->
    <script src="/plugins/select2/js/select2.full.min.js"></script>
    <!-- page script -->
    <script>
        let tblMain;
        let memberData = [], departmentData = [], areaData = [];
        $(function () {
            tblMain = $("#tbl-main").DataTable({
                responsive: true,
                autoWidth: false,
                columnDefs: [
                    {
                        targets: [2, 3, 4], orderable: true, searchable: true
                    },
                    { targets: "_all", orderable: false, searchable: false },
                ],
                order: [[4, 'asc']]
            });
            tblMain._mustDrawNo = true;
            tblMain.on('draw', onTableChange);
            tblMain.on('length', onTableChange);
            tblMain.on('page', onTableChange);
            tblMain.on('search', onTableChange);
            tblMain.on('order', onTableChange);

            $('#form-create-user').validate({
                submitHandler: confirmSubmitCreateUser,
                rules: {
                    full_name: {
                        required: true,
                    },
                    email: {
                        required: true,
                    }
                },
                messages: {
                    full_name: {
                        required: "Please enter user full name",
                    },
                    email: {
                        required: "Please enter user email",
                    },
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });

            $('#form-edit-user').validate({
                submitHandler: confirmSubmitEdit,
                rules: {
                    full_name: {
                        required: true,
                    },
                },
                messages: {
                    full_name: {
                        required: "Please enter user full name",
                    },
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });

            getData();
            getDepartment();
            getArea();
            $('.select2').select2();
        });

        function onTableChange() {
            if (tblMain._mustDrawNo) {
                tblMain._mustDrawNo = false;
                let no = 1;
                tblMain.rows().every((r) => {
                    const data = tblMain.row(r).data();
                    data[1] = no++;
                    tblMain.row(r).data(data);
                });
            } else tblMain._mustDrawNo = true;
        }

        function getData() {
            changeLoading(true);
            const data = {};
            data.culture = '@CultureHelper.CurrentLang';
            data.load_all = true;
            data.fields = '@MemberQueryProjection.INFO,@MemberQueryProjection.DEPARTMENT,' +
                '@MemberQueryProjection.ROLES,@MemberQueryProjection.AREA';
            $.ajax({
                url: '/@ApiEndpoint.MEMBER_API',
                type: 'get',
                data: data,
                success: (respData) => {
                    console.log(respData);
                    let data = respData.data.list;
                    memberData = data;
                    processData(data);
                },
                error: (data) => {
                    handleGeneralError(data);
                },
                complete: () => {
                    changeLoading(false);
                }
            });
        }

        function processData(data) {
            tblMain.clear();
            var btn = (id) =>
                "<div>" +
                    "<button class=\"btn btn-primary btn-sm\" type=\"button\" onclick=\"showEditModal(" + id + ")\">" +
                        "<i class=\"fa fa-pen mr-1\"></i> Edit" +
                    "</button>" +
                    "<button class=\"btn btn-danger btn-sm ml-2\" type=\"button\" onclick=\"confirmRemove(" + id + ")\"><i class=\"fa fa-trash\"></i></button>" +
                "</div>";
            for (var i = 0; i < data.length; i++) {
                const obj = data[i];
                var deps = obj.departments.map(o => o.name + ' - ' + (o.is_manager ? 'Manager' : 'Member'))
                    .join('<br/>');
                tblMain.row.add([
                    btn("'" + obj.user_id + "'"),
                    null,
                    obj.full_name,
                    deps,
                    obj.email,
                    obj.roles ? obj.roles.join(', ') : ""
                ]);
            }
            tblMain.draw();
        }

        function confirmRemove(id) {
            confirmAlert().then((result) => {
                if (result.value)
                    submitRemove(id);
            });
        }

        function submitRemove(id) {
            changeLoading(true);
            $.ajax({
                url: '/@ApiEndpoint.MEMBER_API/' + id,
                type: 'delete',
                success: (data) => {
                    successAlert("Delete successfully").then(getData);
                },
                error: (data) => {
                    handleGeneralError(data);
                },
                complete: () => {
                    changeLoading(false);
                }
            });
        }

        //get extra data
        function getDepartment() {
            const data = {};
            data.culture = '@CultureHelper.CurrentLang';
            data.load_all = true;
            $.ajax({
                url: '/@ApiEndpoint.DEPARTMENT_API',
                type: 'get',
                data: data,
                success: (respData) => {
                    console.log(respData);
                    let data = respData.data.list;
                    departmentData = data;
                    processDepartmentData(data);
                },
                error: (data) => {
                    handleGeneralError(data);
                },
                complete: () => {
                    changeLoading(false);
                }
            });
        }

        function getArea() {
            const data = {};
            data.culture = '@CultureHelper.CurrentLang';
            data.load_all = true;
            $.ajax({
                url: '/@ApiEndpoint.AREA_API',
                type: 'get',
                data: data,
                success: (respData) => {
                    console.log(respData);
                    let data = respData.data.list;
                    areaData = data;
                    processAreaData(data);
                },
                error: (data) => {
                    handleGeneralError(data);
                },
                complete: () => {
                    changeLoading(false);
                }
            });
        }

        function processDepartmentData(data) {
            var depSelect = $('select[name=department_code]');
            for (var i = 0; i < data.length; i++) {
                const obj = data[i];
                depSelect.append(
                    $('<option value="' + obj.code + '">').append(obj.name)
                );
            }
            depSelect.select2();
        }

        function processAreaData(data) {
            var areaSelect = $('select[name=area_code]');
            for (var i = 0; i < data.length; i++) {
                const obj = data[i];
                areaSelect.append(
                    $('<option value="' + obj.code + '">').append(obj.name)
                );
            }
            areaSelect.select2();
        }

        function confirmSubmitCreateUser() {
            confirmAlert().then((result) => {
                if (result.value)
                    submitCreateUser();
            });
        }

        function submitCreateUser() {
            const model = {};
            const form = $('#form-create-user');
            model.full_name = form.find('[name=full_name]').val();
            model.email = form.find('[name=email]').val();
            model.roles = form.find('[name=roles]').val();
            var allDepMembers = form.find('.dep-member').toArray();
            var departments = allDepMembers.map((o) => {
                o = $(o);
                var depCode = o.find('[name=dep_member_dep_code]').val();
                var isManager = o.find('[name=dep_member]:checked').val();
                return {
                    department_code: depCode,
                    is_manager: isManager
                };
            });
            model.departments = departments;

            var allAreaMembers = form.find('.area-member').toArray();
            var areas = allAreaMembers.map((o) => {
                o = $(o);
                var areaCode = o.find('[name=area_member_area_code]').val();
                var isManager = o.find('[name=area_member]:checked').val();
                return {
                    area_code: areaCode,
                    is_manager: isManager
                };
            });
            model.areas = areas;

            changeLoading(true);
            $.ajax({
                url: '/@ApiEndpoint.MEMBER_API',
                type: 'post',
                contentType: 'application/json',
                data: JSON.stringify(model),
                success: (respData) => {
                    successAlert("Create successfully").then(() => {
                        getData();
                    });
                },
                error: (resp) => {
                    handleGeneralError(resp);
                },
                complete: () => {
                    changeLoading(false);
                }
            });
        }

        //edit
        function showEditModal(id) {
            var modal = $('#modal-edit');
            var form = $('#form-edit-user');
            form.validate().resetForm();
            form.find('.is-invalid').removeClass('is-invalid');

            modal.find('[name=department_code]').val('').trigger('change');
            var member = memberData.filter(o => o.user_id == id)[0];
            var depMembers = member.departments;
            var depMembersEles = depMembers.map(o =>
                createDepMemberElement(o)
            );
            var container = modal.find('.dep-member-container');
            container.html('');
            depMembersEles.forEach(o =>
                container.append(o));

            modal.find('[name=area_code]').val('').trigger('change');
            var areaMembers = member.areas;
            var areaMembersEles = areaMembers.map(o =>
                createAreaMemberElement(o)
            );
            container = modal.find('.area-member-container');
            container.html('');
            areaMembersEles.forEach(o =>
                container.append(o));

            modal.find('[name=roles]').select2().val(member.roles).trigger('change');
            modal.find('[name=user_id]').val(member.user_id);
            modal.find('[name=full_name]').val(member.full_name);
            modal.modal('show');
        }

        function confirmSubmitEdit() {
            confirmAlert().then((result) => {
                if (result.value)
                    submitEdit();
            });
        }

        function submitEdit() {
            var modal = $('#modal-edit');
            const model = {};
            var userId = modal.find('[name=user_id]').val();
            model.full_name = modal.find('[name=full_name]').val();
            model.roles = modal.find('[name=roles]').val();

            var allDepMembers = modal.find('.dep-member').toArray();
            var departments = allDepMembers.map((o) => {
                o = $(o);
                var depCode = o.find('[name=dep_member_dep_code]').val();
                var isManager = o.find('[name=dep_member]:checked').val();
                return {
                    department_code: depCode,
                    is_manager: isManager
                };
            });
            model.departments = departments;

            var allAreaMembers = modal.find('.area-member').toArray();
            var areas = allAreaMembers.map((o) => {
                o = $(o);
                var areaCode = o.find('[name=area_member_area_code]').val();
                var isManager = o.find('[name=area_member]:checked').val();
                return {
                    area_code: areaCode,
                    is_manager: isManager
                };
            });
            model.areas = areas;

            console.log(model);
            changeLoading(true);
            $.ajax({
                url: '/@ApiEndpoint.MEMBER_API/' + userId,
                type: 'patch',
                contentType: 'application/json',
                data: JSON.stringify(model),
                success: (data) => {
                    successAlert("Update successfully").then(() => {
                        modal.modal('hide');
                        getData();
                    });
                },
                error: (data) => {
                    handleGeneralError(data);
                },
                complete: () => {
                    changeLoading(false);
                }
            });
        }

        function removeDepMember(btn) {
            $(btn).parent().remove();
        }

        function removeAreaMember(btn) {
            $(btn).parent().remove();
        }

        function addDepMember(formSelector) {
            var form = $(formSelector);
            var currentDepCode = form.find('[name=department_code]').val();
            if (!currentDepCode || form.find('[name=dep_member_dep_code][value=' + currentDepCode + ']').length) return;
            var dep = departmentData.filter(o => o.code == currentDepCode)[0];
            var newDepEle = createDepMemberElement(dep);
            form.find('.dep-member-container').prepend(newDepEle);
        }

        function addAreaMember(formSelector) {
            var form = $(formSelector);
            var currentAreaCode = form.find('[name=area_code]').val();
            if (!currentAreaCode || form.find('[name=area_member_area_code][value=' + currentAreaCode + ']').length) return;
            var area = areaData.filter(o => o.code == currentAreaCode)[0];
            var newAreaEle = createAreaMemberElement(area);
            form.find('.area-member-container').prepend(newAreaEle);
        }

        function createDepMemberElement(dep) {
            return $('<div class="form-group dep-member">').append(
                $('<input type="hidden" name="dep_member_dep_code" value="' + dep.code + '"/>')
            ).append(
                '<span>' + dep.name + '</span> - '
            ).append(
                $('<span class="icheck-primary">').append(
                    $('<label for="dep-member-' + dep.code + '" class="pr-2" style="font-weight: normal">').append(
                        'Is manager'
                    )
                ).append(
                    $('<input type="checkbox" id="dep-member-' + dep.code +
                        '" name="dep_member" value="true" ' + (dep.is_manager ? 'checked="checked"' : '')
                        + '/>')
                )
            ).append(
                $('<span class="ml-3" onclick="removeDepMember(this)"><i class="fa fa-times-circle"></i></span>')
            );
        }

        function createAreaMemberElement(area) {
            return $('<div class="form-group area-member">').append(
                $('<input type="hidden" name="area_member_area_code" value="' + area.code + '"/>')
            ).append(
                '<span>' + area.name + '</span> - '
            ).append(
                $('<span class="icheck-primary">').append(
                    $('<label for="area-member-' + area.code + '" class="pr-2" style="font-weight: normal">').append(
                        'Is manager'
                    )
                ).append(
                    $('<input type="checkbox" id="area-member-' + area.code +
                        '" name="area_member" value="true" ' + (area.is_manager ? 'checked="checked"' : '')
                        + '/>')
                )
            ).append(
                $('<span class="ml-3" onclick="removeAreaMember(this)"><i class="fa fa-times-circle"></i></span>')
            );
        }
    </script>
}

